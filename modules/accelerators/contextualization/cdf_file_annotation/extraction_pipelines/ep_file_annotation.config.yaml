externalId: {{ extractionPipelineExternalId }}
config:
  dataModelViews:
    coreAnnotationView:
      schemaSpace: cdf_cdm
      externalId: CogniteDiagramAnnotation
      version: v1
    annotationStateView:
      schemaSpace: {{ annotationStateSchemaSpace }}
      instanceSpace: {{fileInstanceSpace}}
      externalId: {{ annotationStateExternalId }}
      version: {{ annotationStateVersion }}
    fileView:
      schemaSpace: {{ fileSchemaSpace }}
      instanceSpace: {{fileInstanceSpace}}
      externalId: {{ fileExternalId }}
      version: {{ fileVersion }}
      annotationType: diagrams.FileLink
    targetEntitiesView:
      schemaSpace: {{ targetEntitySchemaSpace }}
      instanceSpace: {{targetEntityInstanceSpace}}
      externalId: {{ targetEntityExternalId }}
      version: {{ targetEntityVersion }}
      annotationType: diagrams.AssetLink
  prepareFunction:
    # getFilesForAnnotationResetQuery:
    #   targetView:
    #     schemaSpace: {{fileSchemaSpace}}
    #     externalId: {{fileExternalId}}
    #     version: {{fileVersion}}
    #   filters:
    #     - values: ["AnnotationFailed", "Annotated"]
    #       negate: False
    #       operator: In
    #       targetProperty: tags
    getFilesToAnnotateQuery:
      targetView:
        schemaSpace: {{ fileSchemaSpace }}
        externalId: {{ fileExternalId }}
        version: {{ fileVersion }}
      filters:
        - values: ["ToAnnotate"] # NOTE: Do not change unless there's a good reason
          negate: False
          operator: In
          targetProperty: tags
        - values: ["AnnotationInProcess", "Annotated", "AnnotationFailed"] # NOTE: Do not change unless there's a good reason
          negate: True
          operator: In
          targetProperty: tags
      limit: 10000
  launchFunction:
    batchSize: 50
    fileSearchProperty: aliases
    targetEntitiesSearchProperty: aliases
    primaryScopeProperty: None
    secondaryScopeProperty:
    patternMode: True
    fileResourceProperty:
    targetEntitiesResourceProperty:
    dataModelService:
      getFilesToProcessQuery:
        targetView:
          schemaSpace: {{ annotationStateSchemaSpace }}
          externalId: {{ annotationStateExternalId }}
          version: {{ annotationStateVersion }}
        filters:
          - values: ["New", "Retry"] # NOTE: Do not change unless there's a good reason
            negate: False
            operator: In
            targetProperty: annotationStatus
        limit: 1000
      getTargetEntitiesQuery:
        targetView:
          schemaSpace: {{ targetEntitySchemaSpace }}
          externalId: {{ targetEntityExternalId }}
          version: {{ targetEntityVersion }}
        filters:
          - values: ["DetectInDiagrams"] # NOTE: Do not change unless there's a good reason
            negate: False
            operator: In
            targetProperty: tags
      getFileEntitiesQuery:
        targetView:
          schemaSpace: {{ fileSchemaSpace }}
          externalId: {{ fileExternalId }}
          version: {{ fileVersion }}
        filters:
          - values: ["DetectInDiagrams"] # NOTE: Do not change unless there's a good reason
            negate: False
            operator: In
            targetProperty: tags
    cacheService:
      cacheTimeLimit: 24 # hours
      rawDb: {{ rawDb }}
      rawTableCache: {{ rawTableCache }}
      rawManualPatternsCatalog: {{ rawManualPatternsCatalog }}
    annotationService:
      pageRange: 50
      partialMatch: True
      diagramDetectConfig:
        connectionFlags:
          noTextInbetween: True
          naturalReadingOrder: True
        readEmbeddedText: True
  finalizeFunction:
    cleanOldAnnotations: True
    maxRetryAttempts: 3
    retrieveService:
      getJobIdQuery:
        targetView:
          schemaSpace: {{ annotationStateSchemaSpace }}
          externalId: {{ annotationStateExternalId }}
          version: {{ annotationStateVersion }}
        filters:
          - values: "Processing" # NOTE: Do not change unless there's a good reason
            negate: False
            operator: Equals
            targetProperty: annotationStatus
          - negate: False # # NOTE: Do not change unless there's a good reason
            operator: Exists
            targetProperty: diagramDetectJobId
    applyService:
      autoApprovalThreshold: 1.0
      autoSuggestThreshold: 1.0
      sinkNode:
          space: {{ patternModeInstanceSpace }}
          externalId: {{patternDetectSink}}
      rawDb: {{ rawDb }}
      rawTableDocTag: {{ rawTableDocTag }}
      rawTableDocDoc: {{ rawTableDocDoc }}
      rawTableDocPattern: {{ rawTableDocPattern }}
  promoteFunction:
    # Query configuration for finding candidate edges to promote
    getCandidatesQuery:
      targetView:
        schemaSpace: cdf_cdm
        externalId: CogniteDiagramAnnotation
        version: v1
      filters:
        - values: "Suggested"  # Only process suggested annotations
          negate: False
          operator: Equals
          targetProperty: status
        - values: ["PromoteAttempted"]  # Skip already attempted edges
          negate: True
          operator: In
          targetProperty: tags
      limit: 500  # Number of edges to process per batch
    rawDb: {{ rawDb }}
    rawTableDocPattern: {{ rawTableDocPattern }}
    rawTableDocTag: {{ rawTableDocTag }}
    rawTableDocDoc: {{ rawTableDocDoc }}
    entitySearchService:
      enableExistingAnnotationsSearch: true  # Primary: Query annotation edges (fast, checks existing annotation edges)
      enableGlobalEntitySearch: true  # Fallback: Global entity search - (slow, unstable as instance count grows)
      maxEntitySearchLimit: 1000  # Max entities to fetch in global search
      textNormalization:
        removeSpecialCharacters: true  # Remove non-alphanumeric characters (e.g., "V-0912" → "V0912")
        convertToLowercase: true  # Convert to lowercase (e.g., "V0912" → "v0912")
        stripLeadingZeros: true  # Remove leading zeros (e.g., "v0912" → "v912")
    cacheService:
      cacheTableName: {{ rawTablePromoteCache }}

