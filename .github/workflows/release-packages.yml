name: Release Packages

on:
  push:
    branches: 
    - hardening
  pull_request:
    types: [closed]
    branches:
    - main

jobs:
  release:
    if: github.event_name != 'pull_request' || (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed to get full git history for short hash
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Create packages.zip
      run: |
        python release_packages.py
        
    - name: Get timestamp and short hash
      id: version
      run: |
        # Get current date in YYYYMMDD format
        TIMESTAMP=$(date +%Y%m%d)
        # Get short hash (7 characters)
        SHORT_HASH=$(git rev-parse --short HEAD)
        # Create version string
        VERSION="${TIMESTAMP}-${SHORT_HASH}"
        echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
        echo "short_hash=$SHORT_HASH" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_ENV
        
    - name: Create timestamped release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body: |
          Automated release for commit ${{ steps.version.outputs.short_hash }}
          
          **Download:** [packages.zip](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/packages.zip)
          
          **Release Date:** ${{ steps.version.outputs.timestamp }}
          **Commit:** ${{ steps.version.outputs.short_hash }}
        files: packages.zip
        draft: false
        prerelease: false
        
    - name: Update latest release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        name: Latest Release
        body: |
          Latest release: ${{ steps.version.outputs.version }}
          
          **Download:** [packages.zip](https://github.com/${{ github.repository }}/releases/download/latest/packages.zip)
          
          **Current Version:** ${{ steps.version.outputs.version }}
          **Release Date:** ${{ steps.version.outputs.timestamp }}
          **Commit:** ${{ steps.version.outputs.short_hash }}
        files: packages.zip
        draft: false
        prerelease: false
        update_existing: true
