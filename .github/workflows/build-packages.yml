name: Build and Release Packages

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Validate packages.toml
      run: |
        python validate_packages.py
        
    - name: Build packages
      id: build
      run: |
        python build_packages.py > build_output.txt
        cat build_output.txt
        HASH=$(grep "🔐 Hash:" build_output.txt | cut -d' ' -f3)
        echo "hash=$HASH" >> $GITHUB_OUTPUT
        
    - name: Update README with release info
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        HASH="${{ steps.build.outputs.hash }}"
        URL="https://github.com/${{ github.repository }}/releases/download/latest/packages.zip"
        
        # Update the Current Release section in README
        sed -i "s|url = \"{{placeholder_url}}\"|url = \"$URL\"|g" README.md
        sed -i "s|checksum = \"{{placeholder_checksum}}\"|checksum = \"$HASH\"|g" README.md
        
    - name: Commit README changes
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add README.md
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update release info in README [skip ci]"
          git push
        fi
        
    - name: Upload packages artifact
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: packages
        path: packages.zip
        
    - name: Create/Update Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        name: Latest Release
        body: |
          ## Latest Packages Release
          
          **Download:** [packages.zip](https://github.com/${{ github.repository }}/releases/download/latest/packages.zip)
          
          **Checksum:** `${{ steps.build.outputs.hash }}`
          
          This release is automatically updated on every merge to main.
        files: packages.zip
        draft: false
        prerelease: false